[{"categories":["SSG"],"content":"Photo by Chris Barbalis on Unsplash 👋 Hello Hugo This is my new site generated using Hugo! Ahhhh ☺ – a fresh start. A new chapter is beginning, and I’ve had my eye on Hugo for a while. Having started and abandoned SSG (static site generator) projects in the past, this might be thee one for a while. It feels stable, feature rich, and easy to work with–all characteristics that are crucial for consistently keeping up and growing a website. If you’re looking for an SSG, the most popular ones seem to be: Jekyll - Ruby based static site generator. Hugo - Go based static site generator. Gatsby - React based framework for building websites and apps. In this post I’d like to briefly share insights from my comparative analysis of SSGs and explain why I chose Hugo over Jekyll or Gatsby this time around. Information here is not intended to be used as persuasive arguments for using one or the other, but you might draw insights from my personal journey. ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:0:0","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"🌎 Overview I’m coming from using Jekyll, a Ruby-based static site generator, to build my previous site and had mixed feelings about it’s performance and ease-of-use. I decided to explore the current options and I found that Jekyll and Hugo are still very popular, so I’ll try to focus on them primarily and sum up all the information I gathered from Googling for an afternoon. Jekyll still seems to be preferred if you’re looking for ease of initial setup which became a little more difficult for the beginner to deploy after Jekyll 3 which requires you to use GitHub Actions to deploy. Hugo seems to be preferred, for those experienced with SSGs, for it’s performance (just keep an eye on JS load). For example, it comes with Render Hooks for creating responsive images. ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:1:0","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"🚢 Deployment The argument for ease of setup and deployment of Jekyll is outdated now. If you want to use the latest Jekyll, you’ll have to use GitHub Actions, and if you don’t you’re stuck with using Jekyll 3 forever. Or, go with Hugo which is the same amount of setup, and for no reason are you locked to a specific version. Support for Jekyll 4.0 · Issue #651 · github/pages-gem · GitHub Why GitHub chose Actions for deployment Using Actions to orchestrate Pages publishing provides many more options for choosing your authoring framework (Next.js, Hugo, Gatsby, Jekyll, NuxtJS or other technologies, and the associated versions thereof) as well as giving you finer control over the publishing process, such as leveraging deployment gates. ~ GitHub Pages: Custom GitHub Actions Workflows (beta) - The GitHub Blog ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:2:0","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"🏇 Performance When it comes to evaluating the performance of SSGs PageSpeed Insights is your friend or worst enemy here. Here’s a great article explaining Google Lighthouse scores: How to get a 100% Google Lighthouse score | Usecue web development Hugo for performance I ditched Gatsby and migrated this site over to Hugo. Hugo is often viewed as the fastest static site generator… it is. ~ Goodbye Gatsby, Hello Hugo - Made Mistakes Render hooks Then there’s Hugo, which lets you customize how Markdown outputs to HTML with what it calls render hooks. These render hook templates are standard HTML with the same templating logic used to write shortcodes, partials, and layouts. Something I appreciate, as writing HTML comes more naturally to me than JavaScript or Ruby. ~ Goodbye Gatsby, Hello Hugo - Made Mistakes ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:3:0","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"🤔 Sentiment There’s certainly more depth when it comes to comparing SSGs like Hugo, Jekyll, and Gatsby. However, this summarizes what I discovered during my initial research. There isn’t a ton of new information out there. I also ran manual sentiment analysis on this dated but relevant GitHub conversation: Is the Jekyll project dead? - Help - Jekyll Talk setup complexity scope templating build process version community complete jekyll 😐 😐 😐 🙂 🙂 (na) 🙂 🙂 🙂 hugo 🙁 😵 🤔 🙁 🙁 🙁 🙁 🙁 In my opinion, people were more enthusiastic about Jekyll and more unenthused by the complexity of Hugo, however in practice I’d have to say that things must have changed quite a bit from 2021-2022 because yeah Hugo can be complex if you want it to be but it doesn’t need to be. For instance, in case it’s not obvious, loveit, the theme I’m using looks great on mobile platforms and has implemented just about every feature I absolutely need for a basic site. deployment I mentioned Hugo has a build/deploy process you have to maintain, but these days that problem has been worked out and it can take an hour or two max to set that up if you’re unexperienced with Actions (see Resources below). ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:4:0","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"🎀 Summing It Up While Jekyll is alive and well and continues to be used for creating impressive websites, my research didn’t uncover substantial evidence favoring Jekyll over Gatsby or Hugo. Why I chose Hugo came down to those key characteristics I mentioned in the beginning. On top of that, no more running gem as well as bundle commands, and keeping up with dependencies is much less of a hassle to non-existent as of yet. So far, I’m really impressed with local preview builds, how fast and responsive they are, and visually the site is an exact match locally as it is deployed. Finally, the project directory feels less cluttered (and you know what they say about cleanliness). Every body likes lists, so here’s my top 10 reasons for using Hugo in no particular order: Stability Features Ease-of-use Robust and easy to use command line Dependency management Clean project structure Performance Speedy preview builds Rapid deployment It’s free! As for performance… I’ll certainly be 👀 and 🔨ing my score, but it’s fast! So here’s to new beginnings, Hugo. 🥂 If you’re still unsure about which static site generator is right for you, I encourage you to explore the links provided and do your own research (DYOR)! Please hit me up or share on social media if you found this content helpful or have suggestions and have a nice day! ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:5:0","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"🔗 Resources ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:6:0","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"Discussions Support for Jekyll 4.0 · Issue #651 · github/pages-gem · GitHub GitHub Pages: Custom GitHub Actions Workflows (beta) - The GitHub Blog ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:6:1","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"Actions Hugo setup · Actions · GitHub Marketplace · GitHub GitHub - peaceiris/actions-gh-pages: GitHub Actions for GitHub Pages 🚀 Deploy static files and publish your site easily. Static-Site-Generators-friendly. GitHub - peaceiris/actions-gh-pages: GitHub Actions for GitHub Pages 🚀 Deploy static files and publish your site easily. Static-Site-Generators-friendly. ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:6:2","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"Pages Managing a custom domain for your GitHub Pages site - GitHub Docs Automatic token authentication - GitHub Docs Creating a GitHub Pages site - GitHub Docs ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:6:3","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"Theme About LoveIt - LoveIt ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:6:4","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":["SSG"],"content":"Getting Started Jekyll Codex Hugo Codex ","date":"2023-08-30","objectID":"/posts/2023-08-30-hello-hugo/:6:5","tags":["hello-world"],"title":"👋 Hello Hugo!","uri":"/posts/2023-08-30-hello-hugo/"},{"categories":null,"content":"About me and this website","date":"2019-08-02","objectID":"/about/","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Author  Jonas Avrin (javrin) | CV | Residence: Connecticut, USA With over 15 years of professional experience, I’ve journeyed from being an Animator and Character TD on blockbuster titles like GTA V and Red Dead Redemption to serving as a Technical Director solving complex challenges in the animated film and VFX industries. I’ve contributed my engineering expertise in iconic movie productions such as Ice Age 2 and Spies in Disguise and recently in live action movies such as Thor: Love and Thunder. Over the years, I’ve developed custom animation tools for various software such as Maya as well as pipeline tools for studio environments, empowering artists in their creative process. Also on the OSS engineering front, I’ve recently contributed to the development of Rez, an integrated package configuration, build, and deployment system. Currently, I’m captivated by the potential of real-time pipelines utilizing game engines like Unreal for a multitude of mediums, from games to virtual production. I am equally passionate about leveraging machine learning and AI to realize humanity’s most ambitious ideas when creating immersive experiences in visual media. ","date":"2019-08-02","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Site Created using Hugo. A fast and flexible static site generator built with love by bep, spf13, and friends in Go. ","date":"2019-08-02","objectID":"/about/:2:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Theme Styled using LoveIt.  LoveIt is a clean, elegant but advanced blog theme for Hugo developed by  Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. ","date":"2019-08-02","objectID":"/about/:3:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Interesting projects I've worked on","date":"2019-08-02","objectID":"/projects/","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Unreal Videos of projects I’ve made using Unreal Engine. Note These demo projects are not polished, except for the main features that were focused on. They aren’t meant to be masterpieces in their own right, just do a few things really well. ","date":"2019-08-02","objectID":"/projects/:1:0","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Fortnite Building Recreates the build system in Fortnite in blueprints. Features Inventory of fun new building materials and their attributes such as cost and health Detailed UI with health and inventory indicators Destroyed objects add their materials to the inventory Retargeted character animation ","date":"2019-08-02","objectID":"/projects/:1:1","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Testing Grounds A game that implements its own streaming level system with actor pooling. Focuses on optimizing game assets and procedurally generated game levels. Features Streaming levels and actor pooling AI Enemy programming, EQS pathfinding, and animation ","date":"2019-08-02","objectID":"/projects/:1:2","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Killer Karts A go-cart racing style game that focuses on state synchronization solutions for multiplayer gaming. Killer Karts Features State synchronization with an authoritative server Cheat protection Lag compensation ","date":"2019-08-02","objectID":"/projects/:1:3","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Puzzle Platforms Allows players to connect to a multiplayer puzzle platformer over LAN as well as Steam. Puzzle Platforms Features LAN network via VPN Connecting to multiplayer over Steam UI development State synchronization ","date":"2019-08-02","objectID":"/projects/:1:4","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Maya Videos of projects I’ve made using Autodesk Maya. ","date":"2019-08-02","objectID":"/projects/:2:0","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Character TD Demo Kaylee is a cartoon-style character I rigged from start to finish. Her face rig has a high level of fidelity for being only a joint driven rig–we were on a tight time budget and I did all the work pro bono while being employed full time. She was animated in a few previs sequences in the short-film Hephaestus before the project tragically came to an end, but many of us were wisked away by our careers in the industry as well. –RIP Doug Note The demo shows Kaylee moving around in her optimized anim mesh–except the face. She’s also skinned to a high res render mesh. Breakdown Fully rigged cartoon-style stretchy character Body part visibility for the anim mesh Fully scalable Rigged goggles and hair geo (by Raj Bajracharya) Custom UIs for character setup and control for animation ","date":"2019-08-02","objectID":"/projects/:2:1","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"FX Videos of FX and workflows I’ve created and supported using various packages. ","date":"2019-08-02","objectID":"/projects/:3:0","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Lightning “Crawlers” for Thor: Love and Rockets I used Houdini Engine with Houdini, Maya, and Katana to provide the capability to import, animate, export, and render lightning effects in Renderman used on the project Thor: Love and Rockets. Breakdown Import rigged Houdini Asset Animated the lightning effect for mjolner and lightning bolt Alembic caching of the asset via export UI Debug render artifacts using Houdini, Maya, and Katana ","date":"2019-08-02","objectID":"/projects/:3:1","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Demo Reels Demos of my work in the Games/Animation/VFX industry. ","date":"2019-08-02","objectID":"/projects/:4:0","tags":null,"title":"Projects","uri":"/projects/"},{"categories":null,"content":"Technical Animation / TD Show Reel Note This is an old demo I made before I went to work at BlueSky studios where I worked on many animated films before the studio was shut down. Please visit my imdb to see those projects. ","date":"2019-08-02","objectID":"/projects/:4:1","tags":null,"title":"Projects","uri":"/projects/"}]